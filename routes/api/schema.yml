openapi: 3.0.0
info:
  title: OpenStudent
  version: "1.0"
servers:
  - url: "http://localhost:3001"
    description: DEV server
components:
  parameters:
    gpParam:
      name: gp
      in: query
      schema:
        type: integer
        maximum: 6
        minimum: 0
      description: |-
        grading period
        * valid int: `0`-`6`
        * `0` retrieves all records
    studentIdParam:
      name: id
      in: path
      required: true
      schema:
        type: string
      description: student identifier
  schemas:
    classwork:
      title: classwork
      type: object
      properties:
        due:
          type: string
          description: date assignment was due
        dueMs:
          type: number
          description: "date due, in milliseconds"
        assigned:
          type: string
          description: date assigned
        assignment:
          type: string
          description: description for assignment
        courseId:
          type: string
          description: course identifier
        courseName:
          type: string
          description: course name
        score:
          type: number
          description: score for assignment
        catWeight:
          type: number
          description: scoring weight for assignment category
        comment:
          type: string
          description: comment on assignment
    interval:
      title: interval
      type: object
      properties:
        start:
          type: number
          description: interval start in milliseconds
        end:
          type: number
          description: interval end in milliseconds
        gradingPeriod:
          type: object
          description: grading period
          properties:
            first:
              type: number
              description: first available period
            prev:
              type: number
              description: previous period
            current:
              type: number
              description: active period
            next:
              type: number
              description: next period
            last:
              type: number
              description: last available period
paths:
  /students:
    get:
      operationId: get-students
      summary: Get all student records
      tags: []
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: number
                    description: student identifier
                  name:
                    type: string
                    description: student name
                  grade:
                    type: string
                    description: current grade level
                  school:
                    type: string
                    description: current school name
                  studentUrl:
                    type: string
                    description: HATEOS link to student details
                required:
                  - id
                  - name
                  - grade
                  - school
                  - studentUrl
        "400":
          description: Bad Request
  "/students/{id}":
    parameters:
      - $ref: "#/components/parameters/studentIdParam"
    get:
      operationId: get-student-id
      summary: Get individual student record
      tags: []
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    description: student identifier
                    type: number
                  name:
                    type: string
                    description: student name
                  grade:
                    type: string
                    description: current grade level
                  building:
                    type: string
                    description: current school name
                  homeroom:
                    type: object
                    description: homeroom
                    properties:
                      room:
                        type: string
                        description: room number
                      teacher:
                        type: string
                        description: "teacher last name, first name"
                  courses:
                    type: array
                    items:
                      type: string
                      description: course identifiers
                  classworkUrl:
                    type: string
                    description: HATEOS link to student classwork
                  gradesUrl:
                    type: string
                    description: HATEOS link to student grades
                  gradesAverageUrl:
                    type: string
                    description: HATEOS link to student grade averages
        "400":
          description: Bad Request
  "/students/{id}/classwork":
    parameters:
      - $ref: "#/components/parameters/studentIdParam"
    get:
      operationId: get-students-id-classwork
      summary: Get student classwork records
      tags: []
      parameters:
        - $ref: "#/components/parameters/gpParam"
        - schema:
            type: boolean
          in: query
          name: group
          description: group classwork by course
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    description: student identifier
                  name:
                    type: string
                    description: student name
                  interval:
                    $ref: "#/components/schemas/interval"
                  assignments:
                    type: array
                    items:
                      $ref: "#/components/schemas/classwork"
        "400":
          description: Bad Request
  "/students/{id}/grades":
    parameters:
      - $ref: "#/components/parameters/studentIdParam"
    get:
      operationId: get-students-id-grades
      summary: Get student grades
      tags: []
      parameters:
        - $ref: "#/components/parameters/gpParam"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    description: student identifier
                  name:
                    type: string
                    description: student full name
                  courseGrades:
                    type: object
                    properties:
                      "{courseId}":
                        type: object
                        description: course identifier (as key)
                        properties:
                          "{category}":
                            type: array
                            description: category name (as key)
                            items:
                              type: number
                              description: scores for assignments
                  gradesAverageUrl:
                    type: string
                    description: HATEOS link to grade averages
  "/students/{id}/grades/average":
    parameters:
      - $ref: "#/components/parameters/studentIdParam"
    get:
      operationId: get-students-id-grades-average
      summary: Get student grade averages
      tags: []
      parameters:
        - $ref: "#/components/parameters/gpParam"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    description: student identifier
                  name:
                    type: string
                    description: student full name
                  alerts:
                    type: array
                    description: alerts for low scores and comments
                    items:
                      type: object
                      properties:
                        date:
                          type: string
                          description: assignment due date
                        course:
                          type: string
                          description: course name
                        assignment:
                          type: string
                          description: assignment description
                        score:
                          type: number
                          description: assignment score
                        comment:
                          type: string
                          description: assignment comment
                  courseGradeAverage:
                    type: object
                    properties:
                      courseId:
                        type: string
                        description: course identifier
                      courseName:
                        type: string
                        description: course name
                      average:
                        type: number
                        description: course average
